name: Deploy FE to Shared Hosting

on:
  push:
    branches: [ main, master ]

jobs: 
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Debug - Show all directories
      run: |
        echo "=== Root directory ==="
        ls -la
        echo ""
        echo "=== Looking for common output directories ==="
        ls -la dist/ 2>/dev/null && echo "Found dist/" || echo "No dist/"
        ls -la build/ 2>/dev/null && echo "Found build/" || echo "No build/"
        ls -la public/ 2>/dev/null && echo "Found public/" || echo "No public/"
        ls -la output/ 2>/dev/null && echo "Found output/" || echo "No output/"
        echo ""
        echo "=== All directories in project ==="
        find . -maxdepth 2 -type d ! -path "./node_modules/*" ! -path "./.git/*"
        echo ""
        echo "=== Looking for index.html files ==="
        find . -name "index.html" ! -path "./node_modules/*" ! -path "./.git/*"

    - name: Create deployment artifacts
      run: |
        mkdir -p deployment
        
        # Check multiple possible output locations
        if [ -d "dist" ]; then
          echo "Copying dist/ directory"
          cp -R dist/* deployment/
        elif [ -d "build" ]; then
          echo "Copying build/ directory"
          cp -R build/* deployment/
        elif [ -d "public" ]; then
          echo "Copying public/ directory"
          cp -R public/* deployment/
        elif [ -d "output" ]; then
          echo "Copying output/ directory"
          cp -R output/* deployment/
        else
          echo "Checking for files in root directory"
          # Copy HTML, CSS, JS files from root if they exist
          cp *.html deployment/ 2>/dev/null || true
          cp -R css/ deployment/ 2>/dev/null || true
          cp -R js/ deployment/ 2>/dev/null || true
          cp -R assets/ deployment/ 2>/dev/null || true
          cp -R images/ deployment/ 2>/dev/null || true
          cp -R img/ deployment/ 2>/dev/null || true
        fi
        
        # Copy .htaccess if it exists
        if [ -f ".htaccess" ]; then
          cp .htaccess deployment/
        else
          cat > deployment/.htaccess << 'EOF'
        <IfModule mod_rewrite.c>
          RewriteEngine On
          RewriteBase /
          
          RewriteCond %{REQUEST_FILENAME} !-f
          RewriteCond %{REQUEST_FILENAME} !-d
          RewriteRule . /index.html [L]
        </IfModule>

        <IfModule mod_deflate.c>
          AddOutputFilterByType DEFLATE text/html text/css text/javascript application/javascript application/json
        </IfModule>

        <IfModule mod_expires.c>
          ExpiresActive On
          ExpiresByType text/css "access plus 1 year"
          ExpiresByType application/javascript "access plus 1 year"
          ExpiresByType image/* "access plus 1 year"
        </IfModule>
        EOF
        fi
        
        echo ""
        echo "=== Deployment directory contents ==="
        ls -la deployment/
        echo ""
        echo "=== Checking for index.html in deployment ==="
        [ -f "deployment/index.html" ] && echo "✓ index.html found" || echo "✗ index.html NOT found"

    - name: Deploy to server
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./deployment/
        server-dir: ${{ secrets.FTP_TARGET }}
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/*.md
          .github/
          .gitignore
          src/
          webpack.config.js
          postcss.config.js
          tailwind.config.js
          package*.json
        log-level: verbose