name: Deploy FE to Shared Hosting

on:
  push:
    branches: [ main, master ]

jobs: 
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install NPM dependencies and build
      run: |
        npm ci
        npm run buil

    - name: Verify build output
      run: |
        echo "Build output directory contents:"
        ls -la dist/ 2>/dev/null || ls -la build/ 2>/dev/null || echo "No dist/ or build/ directory found"
        echo "Public directory contents:"
        ls -la public/

    - name: Create deployment artifacts
      run: |
        mkdir deployment
        
        # Copy built files (Webpack typically outputs to dist/)
        if [ -d "dist" ]; then
          echo "Copying dist/ directory"
          cp -R dist/* deployment/
        elif [ -d "build" ]; then
          echo "Copying build/ directory"
          cp -R build/* deployment/
        else
          echo "No build directory found, copying public/ and compiled assets"
          # Copy compiled CSS/JS from potential build locations
          cp -R public/* deployment/ 2>/dev/null || true
          # Look for compiled assets in other common locations
          find . -name "*.css" -path "*/css/*" -exec cp --parents {} deployment/ \; 2>/dev/null || true
          find . -name "*.js" -path "*/js/*" -exec cp --parents {} deployment/ \; 2>/dev/null || true
        fi
        
        # Ensure essential files exist
        if [ ! -f "deployment/index.html" ] && [ -f "public/index.html" ]; then
          cp public/index.html deployment/
        fi
        
        # Copy your existing .htaccess
        if [ -f ".htaccess" ]; then
          cp .htaccess deployment/
        else
          # Create .htaccess for SPA routing
          cat > deployment/.htaccess << 'EOF'
          <IfModule mod_rewrite.c>
            RewriteEngine On
            
            # Handle client-side routing
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteRule . /index.html [L]
            
            # Enable compression
            <IfModule mod_deflate.c>
              AddOutputFilterByType DEFLATE text/html text/plain text/css application/json
              AddOutputFilterByType DEFLATE application/javascript text/javascript
            </IfModule>
            
            # Cache control
            <IfModule mod_expires.c>
              ExpiresActive on
              ExpiresByType text/css "access plus 1 month"
              ExpiresByType application/javascript "access plus 1 month"
              ExpiresByType image/png "access plus 1 month"
              ExpiresByType image/jpeg "access plus 1 month"
            </IfModule>
          </IfModule>
          EOF
        fi
        
        echo "Deployment directory contents:"
        ls -la deployment/

    - name: Deploy to server
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./deployment/
        server-dir: ${{ secrets.FTP_TARGET }}
        exclude: |
          **/.git*
          **/.git*/**
          **/node_modules/**
          **/*.md
          .github/
          .gitignore
          src/
          webpack.config.js
          postcss.config.js
          tailwind.config.js
          package*
        log-level: verbose